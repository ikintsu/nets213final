# -*- coding: utf-8 -*-
"""Graph Aggregations 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JVnba7A5U6VLfrtV9CvkegLbuPKQFacN
"""

import matplotlib.pyplot as plt
import pandas as pd
import plotly.graph_objects as go

# initialize dictionaries to keep track of information
year_count = {}
for i in range(2010, 2022):
  year_count[i] = 0

states_data = {"AL": 0,
               "AK": 0,
               "AZ": 0,
               "AR": 0,
               "CA": 0,
               "CO": 0,
               "CT": 0,
               "DC": 0,
               "DE": 0,
               "FL": 0,
               "GA": 0,
               "HI": 0,
               "ID": 0,
               "IL": 0,
               "IN": 0,
               "IA": 0,
               "KS": 0,
               "KY": 0,
               "LA": 0,
               "ME": 0,
               "MD": 0,
               "MA": 0,
               "MI": 0,
               "MN": 0,
               "MS": 0,
               "MO": 0,
               "MT": 0,
               "NE": 0,
               "NV": 0,
               "NH": 0,
               "NJ": 0,
               "NM": 0,
               "NY": 0,
               "NC": 0,
               "ND": 0,
               "OH": 0,
               "OK": 0,
               "OR": 0,
               "PA": 0,
               "RI": 0,
               "SC": 0,
               "SD": 0,
               "TN": 0,
               "TX": 0,
               "UT": 0,
               "VT": 0,
               "VA": 0,
               "WA": 0,
               "WV": 0,
               "WI": 0,
               "WY": 0}

data = pd.read_csv("article data.csv")
for _, x in data.iterrows():
  url = x["article_id"]
  year = x["year"]
  state = x["state"]

  if str(year) != "nan":
    year_count[int(year)] += 1

  if str(state) != "nan":
    states_data[state] += 1
      
### TIME GRAPH ###

gx = sorted(year_count)
gy = [year_count[x] for x in gx]
plt.plot(gx, gy)
plt.gcf().autofmt_xdate()
plt.title("AAPI Violence Articles Over Years")
plt.xticks(range(2010, 2022))
plt.yticks(range(0, 21, 4))
plt.show()

### STATE GRAPH ###

states_data_df = pd.DataFrame(states_data.items(), columns=['state', 'count'])

scl = [[0.0, 'rgb(242,240,247)'], [0.2, 'rgb(218,218,235)'], [0.4, 'rgb(188,189,220)'], 
       [0.6, 'rgb(158,154,200)'], [0.8, 'rgb(117,107,177)'], [1.0, 'rgb(84,39,143)']]

data = [dict(
          type='choropleth',
          colorscale = scl,
          autocolorscale = False,
          locations = states_data_df['state'],
          z = states_data_df['count'],
          locationmode = 'USA-states',
          marker = dict(
              line = dict(
                  color = 'rgb(255,255,255)',
                  width = 2
              )
          ),
          colorbar = dict(
              title = "Number of Incidents"
          )
        )]

layout = dict(
        title = 'AAPI Violence by State',
        geo = dict(
            scope = 'usa',
            projection = dict(type = 'albers usa'),
            showlakes = True,
            lakecolor = 'rgb(255, 255, 255)',
        ),
    )
    
fig = go.Figure(data=data, layout=layout)
fig.show()