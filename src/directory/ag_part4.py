# -*- coding: utf-8 -*-
"""Graph Aggregations

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mi0qp6dJQxV4vQdWxioIu03rnDkTeRaP
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install newspaper3k
import newspaper
from newspaper import Article
from newspaper import Config
import matplotlib.pyplot as plt
import pandas as pd
import plotly.graph_objects as go

user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.72 Safari/537.36"
config = Config()
config.browser_user_agent = user_agent

### TIME GRAPH ###

bad_links = []

# initialize dictionaries to keep track of information
month_count = {}
year_count = {}
for i in range(2010, 2022):
  year_count[str(i)] = 0
  for j in range(1, 13):
    month_count[f"{i}-{j:02}"] = 0

data = pd.read_csv("sandbox_results_final.csv")
for _, x in data.iterrows():
  label = x["Answer.reference_hate"]
  url = x["Input.url"].strip()

  try:
    article = Article(url, config=config)
    article.download()
    article.parse()
  except newspaper.article.ArticleException:
    print(f"FAIL ON {url}")
    bad_links.append((label, url))
    continue
  
  year_month = article.publish_date
  if year_month != None and label == True:
    year_month = year_month.strftime("%Y-%m")
    year = year_month.split("-")[0]
    year_count[year] += 1
    month_count[year_month] += 1
      
gx = sorted(year_count)
gy = [year_count[x] for x in gx]
plt.plot(gx, gy)
plt.gcf().autofmt_xdate()
plt.title("Hate Crimes Articles Over Years (Sandbox)")
yloc, ylabel = plt.yticks()
plt.show()

for i in range(2010, 2022):
  gx = sorted([x for x in month_count.keys() if x[:4] == str(i)])
  gy = [month_count[x] for x in gx]
  plt.plot(gx, gy)
  plt.gcf().autofmt_xdate()
  plt.title(f"Hate Crime Articles Over {i} (Sandbox)")
  plt.yticks(yloc, ylabel)
  plt.show()

### STATE GRAPH ###

states_data = pd.read_csv("statesdata.csv")

scl = [[0.0, 'rgb(242,240,247)'], [0.2, 'rgb(218,218,235)'], [0.4, 'rgb(188,189,220)'], 
       [0.6, 'rgb(158,154,200)'], [0.8, 'rgb(117,107,177)'], [1.0, 'rgb(84,39,143)']]

data = [dict(
          type='choropleth',
          colorscale = scl,
          autocolorscale = False,
          locations = states_data['state'],
          z = states_data['count'],
          locationmode = 'USA-states',
          marker = dict(
              line = dict(
                  color = 'rgb(255,255,255)',
                  width = 2
              )
          ),
          colorbar = dict(
              title = "Number of Incidents"
          )
        )]

layout = dict(
        title = 'AAPI Violence by State (Sandbox)',
        geo = dict(
            scope = 'usa',
            projection = dict(type = 'albers usa'),
            showlakes = True,
            lakecolor = 'rgb(255, 255, 255)',
        ),
    )
    
fig = go.Figure(data=data, layout=layout)
fig.show()